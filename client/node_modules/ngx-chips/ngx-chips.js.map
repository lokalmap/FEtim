{"version":3,"file":"ngx-chips.js","sources":["ts/modules/ngx-chips.ts","ts/modules/tag-input.module.ts","ts/modules/components/icon/icon.ts","ts/modules/components/tag-input/tag-input.ts","ts/modules/components/tag-input/animations.ts","ts/modules/components/tag/tag.component.ts","ts/modules/components/tag/tag-ripple.component.ts","ts/modules/components/dropdown/tag-input-dropdown.component.ts","ts/modules/components/tag-input-form/tag-input-form.component.ts","ts/modules/core/helpers/listen.ts","ts/modules/core/accessor.ts","ts/modules/core/providers/options-provider.ts","ts/modules/defaults.ts","ts/modules/core/providers/drag-provider.ts","ts/modules/core/constants/index.ts","ts/modules/core/pipes/highlight.pipe.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {TagInputModule,TagInputDropdown,DeleteIconComponent,TagInputForm,TagRipple,TagComponent,TagInputComponent} from './index';\n\nexport {TagInputDropdown as ɵd} from './components/dropdown/tag-input-dropdown.component';\nexport {DeleteIconComponent as ɵi} from './components/icon/icon';\nexport {TagInputForm as ɵe} from './components/tag-input-form/tag-input-form.component';\nexport {animations as ɵc} from './components/tag-input/animations';\nexport {TagInputComponent as ɵa} from './components/tag-input/tag-input';\nexport {TagRipple as ɵg} from './components/tag/tag-ripple.component';\nexport {TagComponent as ɵf} from './components/tag/tag.component';\nexport {TagInputAccessor as ɵb} from './core/accessor';\nexport {HighlightPipe as ɵj} from './core/pipes/highlight.pipe';\nexport {DragProvider as ɵh} from './core/providers/drag-provider';","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst /** @type {?} */ optionsProvider = new OptionsProvider();\nexport class TagInputModule {\n/**\n * \\@name withDefaults\n * @param {?} options {Options}\n * @return {?}\n */\npublic static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TagInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\nexport class DeleteIconComponent {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'delete-icon',\n    template: `\n      <span>\n          <svg height=\"16px\" viewBox=\"0 0 32 32\" width=\"16px\">\n              <path d=\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\"\n                    fill=\"#121313\" />\n          </svg>\n      </span>\n    `,\n    styles: [`\n      .dark tag:focus {\n        -webkit-box-shadow: 0 0 0 1px #323232;\n                box-shadow: 0 0 0 1px #323232; }\n\n      .ng2-tag-input.bootstrap3-info {\n        background-color: #fff;\n        display: inline-block;\n        color: #555;\n        vertical-align: middle;\n        max-width: 100%;\n        height: 42px;\n        line-height: 44px; }\n\n      .ng2-tag-input.bootstrap3-info input {\n        border: none;\n        -webkit-box-shadow: none;\n                box-shadow: none;\n        outline: none;\n        background-color: transparent;\n        padding: 0 6px;\n        margin: 0;\n        width: auto;\n        max-width: inherit; }\n\n      .ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder {\n        color: #777;\n        opacity: 1; }\n\n      .ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder {\n        color: #777; }\n\n      .ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder {\n        color: #777; }\n\n      .ng2-tag-input.bootstrap3-info input:focus {\n        border: none;\n        -webkit-box-shadow: none;\n                box-shadow: none; }\n\n      .bootstrap3-info.ng2-tag-input.ng2-tag-input--focused {\n        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n                box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n        border: 1px solid #ccc; }\n\n      .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n        -webkit-box-shadow: inset 0 1px 1px #d9534f;\n                box-shadow: inset 0 1px 1px #d9534f; }\n\n      .ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        -webkit-transition: all 0.25s;\n        transition: all 0.25s;\n        padding: 0.25rem 0;\n        min-height: 32px;\n        cursor: text;\n        border-bottom: 2px solid #efefef; }\n        .ng2-tag-input:focus {\n          outline: 0; }\n        .ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .ng2-tag-input.ng2-tag-input--focused {\n          border-bottom: 2px solid #2196F3; }\n        .ng2-tag-input.ng2-tag-input--invalid {\n          border-bottom: 2px solid #f44336; }\n        .ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .ng2-tag-input form {\n          margin: 0.1em 0; }\n        .ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .minimal.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        cursor: text;\n        border-bottom: 1px solid transparent; }\n        .minimal.ng2-tag-input:focus {\n          outline: 0; }\n        .minimal.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .minimal.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .minimal.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .minimal.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .dark.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        cursor: text;\n        border-bottom: 2px solid #444; }\n        .dark.ng2-tag-input:focus {\n          outline: 0; }\n        .dark.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .dark.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .dark.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .dark.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .bootstrap.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        cursor: text;\n        border-bottom: 2px solid #efefef; }\n        .bootstrap.ng2-tag-input:focus {\n          outline: 0; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--focused {\n          border-bottom: 2px solid #0275d8; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--invalid {\n          border-bottom: 2px solid #d9534f; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .bootstrap.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .bootstrap3-info.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        padding: 4px;\n        cursor: text;\n        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n                box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n        border-radius: 4px; }\n        .bootstrap3-info.ng2-tag-input:focus {\n          outline: 0; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n          border-bottom: 1px solid #d9534f; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .bootstrap3-info.ng2-tag-input form {\n          margin: 0.1em 0; }\n        .bootstrap3-info.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .error-message {\n        font-size: 0.8em;\n        color: #f44336;\n        margin: 0.5em 0 0 0; }\n\n      .bootstrap .error-message {\n        color: #d9534f; }\n\n      :host(delete-icon) {\n        width: 20px;\n        height: 16px;\n        -webkit-transition: all 0.15s;\n        transition: all 0.15s;\n        display: inline-block;\n        text-align: right; }\n        :host(delete-icon) path {\n          fill: #444; }\n        :host(delete-icon) svg {\n          vertical-align: bottom;\n          height: 34px; }\n\n      :host(delete-icon):hover {\n        -webkit-transform: scale(1.5) translateY(-3px);\n                transform: scale(1.5) translateY(-3px); }\n\n      :host-context(.dark) {\n        text-align: right; }\n        :host-context(.dark) path {\n          fill: #fff; }\n        :host-context(.dark) svg {\n          vertical-align: bottom;\n          height: 34px; }\n\n      :host-context(.minimal) {\n        text-align: right; }\n        :host-context(.minimal) path {\n          fill: #444; }\n        :host-context(.minimal) svg {\n          vertical-align: bottom;\n          height: 34px; }\n\n      :host-context(.bootstrap) {\n        text-align: right; }\n        :host-context(.bootstrap) path {\n          fill: #fff; }\n        :host-context(.bootstrap) svg {\n          vertical-align: bottom;\n          height: 34px; }\n\n      :host-context(tag:focus) path,\n      :host-context(tag:active) path {\n        fill: #fff; }\n\n      :host-context(.dark tag:focus) path,\n      :host-context(.dark tag:active) path {\n        fill: #000; }\n\n      :host-context(.minimal tag:focus) path,\n      :host-context(.minimal tag:active) path {\n        fill: #000; }\n\n      :host-context(.bootstrap tag:focus) path,\n      :host-context(.bootstrap tag:active) path {\n        fill: #fff; }\n\n      :host-context(.bootstrap3-info) {\n        height: inherit; }\n        :host-context(.bootstrap3-info) path {\n          fill: #fff; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DeleteIconComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDeleteIconComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDeleteIconComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// angular\n\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit,\n    Type\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\n\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/of';\nimport'rxjs/add/operator/debounceTime';\nimport'rxjs/add/operator/filter';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/operator/first';\n\n// ng2-tag-input\n\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\nimport { OptionsProvider } from '../../core/providers/options-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { TagInputOptions } from '../../defaults';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst /** @type {?} */ DragEvent = ( /** @type {?} */((global as any))).DragEvent;\n\nconst /** @type {?} */ CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n\nconst /** @type {?} */ defaults: Type<TagInputOptions> = forwardRef(() => OptionsProvider.defaults.tagInput);\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n/**\n * \\@name separatorKeys\n * @desc keyboard keys with which a user can separate items\n */\npublic separatorKeys: string[] = new defaults().separatorKeys;\n/**\n * \\@name separatorKeyCodes\n * @desc keyboard key codes with which a user can separate items\n */\npublic separatorKeyCodes: number[] = new defaults().separatorKeyCodes;\n/**\n * \\@name placeholder\n * @desc the placeholder of the input text\n */\npublic placeholder: string = new defaults().placeholder;\n/**\n * \\@name secondaryPlaceholder\n * @desc placeholder to appear when the input is empty\n */\npublic secondaryPlaceholder: string = new defaults().secondaryPlaceholder;\n/**\n * \\@name maxItems\n * @desc maximum number of items that can be added\n */\npublic maxItems: number = new defaults().maxItems;\n/**\n * \\@name validators\n * @desc array of Validators that are used to validate the tag before it gets appended to the list\n */\npublic validators: ValidatorFn[] = new defaults().validators;\n/**\n * \\@name asyncValidators\n * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n */\npublic asyncValidators: AsyncValidatorFn[] = new defaults().asyncValidators;\n/**\n * - if set to true, it will only possible to add items from the autocomplete\n * \\@name onlyFromAutocomplete\n */\npublic onlyFromAutocomplete = new defaults().onlyFromAutocomplete;\n/**\n * \\@name errorMessages\n */\npublic errorMessages: { [key: string]: string } = new defaults().errorMessages;\n/**\n * \\@name theme\n */\npublic theme: string = new defaults().theme;\n/**\n * \\@name onTextChangeDebounce\n */\npublic onTextChangeDebounce = new defaults().onTextChangeDebounce;\n/**\n * - custom id assigned to the input\n * \\@name id\n */\npublic inputId: string = new defaults().inputId;\n/**\n * - custom class assigned to the input\n */\npublic inputClass: string = new defaults().inputClass;\n/**\n * - option to clear text input when the form is blurred\n * \\@name clearOnBlur\n */\npublic clearOnBlur: boolean = new defaults().clearOnBlur;\n/**\n * - hideForm\n * \\@name clearOnBlur\n */\npublic hideForm: boolean = new defaults().hideForm;\n/**\n * \\@name addOnBlur\n */\npublic addOnBlur: boolean = new defaults().addOnBlur;\n/**\n * \\@name addOnPaste\n */\npublic addOnPaste: boolean = new defaults().addOnPaste;\n/**\n * - pattern used with the native method split() to separate patterns in the string pasted\n * \\@name pasteSplitPattern\n */\npublic pasteSplitPattern = new defaults().pasteSplitPattern;\n/**\n * \\@name blinkIfDupe\n */\npublic blinkIfDupe = new defaults().blinkIfDupe;\n/**\n * \\@name removable\n */\npublic removable = new defaults().removable;\n/**\n * \\@name editable\n */\npublic editable: boolean = new defaults().editable;\n/**\n * \\@name allowDupes\n */\npublic allowDupes = new defaults().allowDupes;\n/**\n * \\@description if set to true, the newly added tags will be added as strings, and not objects\n * \\@name modelAsStrings\n */\npublic modelAsStrings = new defaults().modelAsStrings;\n/**\n * \\@name trimTags\n */\npublic trimTags = new defaults().trimTags;\n/**\n * \\@name inputText\n * @return {?}\n */\npublic get inputText(): string {\n        return this.inputTextValue;\n    }\n/**\n * \\@name ripple\n */\npublic ripple: boolean = new defaults().ripple;\n/**\n * \\@name tabindex\n * @desc pass through the specified tabindex to the input\n */\npublic tabindex: string = new defaults().tabIndex;\n/**\n * \\@name disable\n */\npublic disable: boolean = new defaults().disable;\n/**\n * \\@name dragZone\n */\npublic dragZone: string = new defaults().dragZone;\n/**\n * \\@name onRemoving\n */\npublic onRemoving = new defaults().onRemoving;\n/**\n * \\@name onAdding\n */\npublic onAdding = new defaults().onAdding;\n/**\n * \\@name animationDuration\n */\npublic animationDuration = new defaults().animationDuration;\n/**\n * \\@name onAdd\n * @desc event emitted when adding a new item\n */\npublic onAdd = new EventEmitter<TagModel>();\n/**\n * \\@name onRemove\n * @desc event emitted when removing an existing item\n */\npublic onRemove = new EventEmitter<TagModel>();\n/**\n * \\@name onSelect\n * @desc event emitted when selecting an item\n */\npublic onSelect = new EventEmitter<TagModel>();\n/**\n * \\@name onFocus\n * @desc event emitted when the input is focused\n */\npublic onFocus = new EventEmitter<string>();\n/**\n * \\@name onFocus\n * @desc event emitted when the input is blurred\n */\npublic onBlur = new EventEmitter<string>();\n/**\n * \\@name onTextChange\n * @desc event emitted when the input value changes\n */\npublic onTextChange = new EventEmitter<TagModel>();\n/**\n * - output triggered when text is pasted in the form\n * \\@name onPaste\n */\npublic onPaste = new EventEmitter<string>();\n/**\n * - output triggered when tag entered is not valid\n * \\@name onValidationError\n */\npublic onValidationError = new EventEmitter<TagModel>();\n/**\n * - output triggered when tag is edited\n * \\@name onTagEdited\n */\npublic onTagEdited = new EventEmitter<TagModel>();\n/**\n * \\@name dropdown\n */\npublic dropdown: TagInputDropdown;\n/**\n * \\@name template\n * @desc reference to the template if provided by the user\n */\npublic templates: QueryList<TemplateRef<any>>;\n/**\n * \\@name inputForm\n */\npublic inputForm: TagInputForm;\n/**\n * \\@name selectedTag\n * @desc reference to the current selected tag\n */\npublic selectedTag: TagModel | undefined;\n/**\n * \\@name isLoading\n */\npublic isLoading = false;\n/**\n * \\@name inputText\n * @param {?} text\n * @return {?}\n */\npublic set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n/**\n * \\@name tags\n * @desc list of Element items\n */\npublic tags: QueryList<TagComponent>;\n/**\n * \\@name listeners\n * @desc array of events that get fired using \\@fireEvents\n */\nprivate listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n/**\n * \\@description emitter for the 2-way data binding inputText value\n * \\@name inputTextChange\n */\npublic inputTextChange: EventEmitter<string> = new EventEmitter();\n/**\n * \\@description private variable to bind get/set\n * \\@name inputTextValue\n */\npublic inputTextValue = '';\n/**\n * @desc removes the tab index if it is set - it will be passed through to the input\n * \\@name tabindexAttr\n * @return {?}\n */\npublic get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n/**\n * \\@name animationMetadata\n */\npublic animationMetadata: { value: string, params: object };\n/**\n * @param {?} renderer\n * @param {?} dragProvider\n */\nconstructor(private readonly renderer: Renderer2,\npublic readonly dragProvider: DragProvider) {\n        super();\n    }\n/**\n * \\@name ngAfterViewInit\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n/**\n * \\@name ngOnInit\n * @return {?}\n */\npublic ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const /** @type {?} */ hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n\t    // Setting editable to false to fix problem with tags in IE still being editable when\n\t    // onlyFromAutocomplete is true\n\t\tthis.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n/**\n * \\@name onRemoveRequested\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\npublic onRemoveRequested(tag: TagModel, index: number): void {\n        const /** @type {?} */ subscribeFn = (model: TagModel) => this.removeItem(model, index);\n\n        this.onRemoving ?\n            this.onRemoving(tag)\n                .first()\n                .subscribe(subscribeFn) : subscribeFn(tag);\n    }\n/**\n * \\@name onAddingRequested\n * @param {?} fromAutocomplete {boolean}\n * @param {?} tag {TagModel}\n * @param {?=} index\n * @return {?}\n */\npublic onAddingRequested(fromAutocomplete: boolean, tag: TagModel, index?: number): void {\n        if (!tag) {\n            return;\n        }\n\n        const /** @type {?} */ subscribeFn = (model: TagModel) => {\n            return this.addItem(fromAutocomplete, model, index);\n        }\n\n        this.onAdding ?\n            this.onAdding(tag)\n                .first()\n                .subscribe(subscribeFn) : subscribeFn(tag);\n    }\n/**\n * \\@name appendTag\n * @param tag {TagModel}\n */\npublic appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n/**\n * \\@name createTag\n * @param model\n */\npublic createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n/**\n * \\@name selectItem\n * @desc selects item passed as parameter as the selected tag\n * @param {?} item\n * @param {?=} emit\n * @return {?}\n */\npublic selectItem(item: TagModel | undefined, emit = true): void {\n        const /** @type {?} */ isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n/**\n * \\@name fireEvents\n * @desc goes through the list of the events for a given eventName, and fires each of them\n * @param {?} eventName\n * @param {?=} $event\n * @return {?}\n */\npublic fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n/**\n * \\@name handleKeydown\n * @desc handles action when the user hits a keyboard key\n * @param {?} data\n * @return {?}\n */\npublic handleKeydown(data: any): void {\n        const /** @type {?} */ event = data.event;\n        const /** @type {?} */ key = event.keyCode || event.which;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const /** @type {?} */ index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n            case constants.ACTIONS_KEYS.TAB:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n/**\n * \\@name setInputValue\n * @param {?} value\n * @return {?}\n */\npublic setInputValue(value: string): void {\n        const /** @type {?} */ control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value);\n    }\n/**\n * \\@name getControl\n * @return {?}\n */\nprivate getControl(): FormControl {\n        return /** @type {?} */(( <FormControl>this.inputForm.value));\n    }\n/**\n * \\@name focus\n * @param {?=} applyFocus\n * @param {?=} displayAutocomplete\n * @return {?}\n */\npublic focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n/**\n * \\@name blur\n * @return {?}\n */\npublic blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n/**\n * \\@name hasErrors\n * @return {?}\n */\npublic hasErrors(): boolean {\n        return this.inputForm && this.inputForm.hasErrors();\n    }\n/**\n * \\@name isInputFocused\n * @return {?}\n */\npublic isInputFocused(): boolean {\n        return this.inputForm && this.inputForm.isInputFocused();\n    }\n/**\n * - this is the one way I found to tell if the template has been passed and it is not\n * the template for the menu item\n * \\@name hasCustomTemplate\n * @return {?}\n */\npublic hasCustomTemplate(): boolean {\n        const /** @type {?} */ template = this.templates ? this.templates.first : undefined;\n        const /** @type {?} */ menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n/**\n * \\@name maxItemsReached\n * @return {?}\n */\npublic get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n/**\n * \\@name formValue\n * @return {?}\n */\npublic get formValue(): string {\n        const /** @type {?} */ form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n/**\n * 3\n * \\@name onDragStarted\n * @param {?} event\n * @param {?} tag\n * @param {?} index\n * @return {?}\n */\npublic onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const /** @type {?} */ item = /** @type {?} */(( { zone: this.dragZone, tag, index } as DraggedTag));\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({dragging: true, index});\n    }\n/**\n * \\@name onDragOver\n * @param {?} event\n * @param {?=} index\n * @return {?}\n */\npublic onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({dropping: true});\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n/**\n * \\@name onTagDropped\n * @param {?} event\n * @param {?} index\n * @return {?}\n */\npublic onTagDropped(event: DragEvent, index: number): void {\n        const /** @type {?} */ item = this.dragProvider.getDraggedItem(event);\n\n        if (item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n/**\n * \\@name isDropping\n * @return {?}\n */\npublic isDropping(): boolean {\n        const /** @type {?} */ isReceiver = this.dragProvider.receiver === this;\n        const /** @type {?} */ isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n/**\n * \\@name onTagBlurred\n * @param {?} changedElement {TagModel}\n * @param {?} index {number}\n * @return {?}\n */\npublic onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n/**\n * \\@name trackBy\n * @param {?} item\n * @return {?}\n */\npublic trackBy(item: TagModel): string {\n        return item[this.identifyBy];\n    }\n/**\n *\n * @param {?} tag\n * @param {?=} fromAutocomplete\n * @return {?}\n */\nprivate isTagValid(tag: TagModel, fromAutocomplete = false): boolean {\n        const /** @type {?} */ selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n\n        if (selectedItem && !fromAutocomplete) {\n            return false;\n        }\n\n        const /** @type {?} */ dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const /** @type {?} */ model = this.tags.find(tag => {\n                return this.getItemValue(tag.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const /** @type {?} */ isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const /** @type {?} */ assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes === true,\n\n            // 2. check max items has not been reached\n            this.maxItemsReached === false,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || this.onlyFromAutocomplete === false)\n        ];\n\n        return assertions.filter(item => item).length === assertions.length;\n    }\n/**\n * \\@name moveToTag\n * @param {?} item\n * @param {?} direction\n * @return {?}\n */\nprivate moveToTag(item: TagModel, direction: string): void {\n        const /** @type {?} */ isLast = this.tags.last.model === item;\n        const /** @type {?} */ isFirst = this.tags.first.model === item;\n        const /** @type {?} */ stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const /** @type {?} */ offset = direction === constants.NEXT ? 1 : -1;\n        const /** @type {?} */ index = this.getTagIndex(item) + offset;\n        const /** @type {?} */ tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n/**\n * \\@name getTagIndex\n * @param {?} item\n * @return {?}\n */\nprivate getTagIndex(item: TagModel): number {\n        const /** @type {?} */ tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n/**\n * \\@name getTagAtIndex\n * @param {?} index\n * @return {?}\n */\nprivate getTagAtIndex(index: number) {\n        const /** @type {?} */ tags = this.tags.toArray();\n\n        return tags[index];\n    }\n/**\n * \\@name removeItem\n * @desc removes an item from the array of the model\n * @param {?} tag {TagModel}\n * @param {?} index {number}\n * @return {?}\n */\nprivate removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n/**\n * \\@name addItem\n * @desc adds the current text model to the items array\n * @param {?=} fromAutocomplete\n * @param {?=} item\n * @param {?=} index\n * @return {?}\n */\nprivate addItem(fromAutocomplete = false, item: TagModel, index?: number): void {\n        const /** @type {?} */ model = this.getItemDisplay(item);\n/**\n * \\@name reset\n */\nconst reset = (): void => {\n            // reset control and focus input\n            this.setInputValue('');\n\n            // focus input\n            this.focus(true, false);\n        };\n/**\n * \\@name validationFilter\n * @param tag\n */\nconst validationFilter = (tag: TagModel): boolean => {\n            const isValid = this.isTagValid(tag, fromAutocomplete) && this.inputForm.form.valid;\n\n            if (!isValid) {\n                this.onValidationError.emit(tag);\n            }\n\n            return isValid;\n        };\n/**\n * \\@name subscribeFn\n * @param tag\n */\nconst subscribeFn = (tag: TagModel): void => {\n            this.appendTag(tag, index);\n\n            // emit event\n            this.onAdd.emit(tag);\n\n            if (!this.dropdown) {\n                return;\n            }\n\n            this.dropdown.hide();\n            this.dropdown.showDropdownIfEmpty ? this.dropdown.show() : undefined;\n        };\n\n        Observable\n            .of(model)\n            .first()\n            .filter(() => model.trim() !== '')\n            .map(() => item)\n            .map(this.createTag)\n            .filter(validationFilter)\n            .subscribe(subscribeFn, undefined, reset);\n    }\n/**\n * \\@name setupSeparatorKeysListener\n * @return {?}\n */\nprivate setupSeparatorKeysListener(): void {\n        const /** @type {?} */ useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const /** @type {?} */ listener = ($event) => {\n            const /** @type {?} */ hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const /** @type {?} */ hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n\n            if (hasKeyCode || hasKey) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue);\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n/**\n * \\@name setUpKeypressListeners\n * @return {?}\n */\nprivate setUpKeypressListeners(): void {\n        const /** @type {?} */ listener = ($event) => {\n            const /** @type {?} */ isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n/**\n * \\@name setUpKeydownListeners\n * @return {?}\n */\nprivate setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            this.fireEvents('keydown', event);\n\n            if (event.key === 'Backspace' && this.formValue === '') {\n                event.preventDefault();\n            }\n        });\n    }\n/**\n * \\@name setUpOnPasteListener\n * @return {?}\n */\nprivate setUpOnPasteListener(): void {\n        const /** @type {?} */ input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', this.onPasteCallback);\n    }\n/**\n * \\@name setUpTextChangeSubscriber\n * @return {?}\n */\nprivate setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .debounceTime(this.onTextChangeDebounce)\n            .map(() => this.formValue)\n            .subscribe((value: string) => this.onTextChange.emit(value));\n    }\n/**\n * \\@name setUpOnBlurSubscriber\n * @return {?}\n */\nprivate setUpOnBlurSubscriber(): void {\n        const /** @type {?} */ filterFn = (): boolean => {\n            return !(this.dropdown && this.dropdown.isVisible) && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .filter(filterFn)\n            .subscribe(() => {\n                if (this.addOnBlur) {\n                    this.onAddingRequested(false, this.formValue);\n                }\n\n                this.setInputValue('');\n            });\n    }\n/**\n * \\@name findDupe\n * @param {?} tag\n * @param {?} isFromAutocomplete\n * @return {?}\n */\nprivate findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const /** @type {?} */ identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const /** @type {?} */ id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n/**\n * \\@name onPasteCallback\n * @param data\n */\nprivate onPasteCallback = (data: ClipboardEvent): void => {\n        const text = data.clipboardData.getData('text/plain');\n\n        text.split(this.pasteSplitPattern)\n            .map(item => this.createTag(item))\n            .forEach(item => this.onAddingRequested(false, item));\n\n        this.onPaste.emit(text);\n\n        setTimeout(() => this.setInputValue(''), 0);\n    }\n/**\n * \\@name setAnimationMetadata\n * @return {?}\n */\nprivate setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: {...this.animationDuration}\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styles: [`\n      .dark tag:focus {\n        -webkit-box-shadow: 0 0 0 1px #323232;\n                box-shadow: 0 0 0 1px #323232; }\n\n      .ng2-tag-input.bootstrap3-info {\n        background-color: #fff;\n        display: inline-block;\n        color: #555;\n        vertical-align: middle;\n        max-width: 100%;\n        height: 42px;\n        line-height: 44px; }\n\n      .ng2-tag-input.bootstrap3-info input {\n        border: none;\n        -webkit-box-shadow: none;\n                box-shadow: none;\n        outline: none;\n        background-color: transparent;\n        padding: 0 6px;\n        margin: 0;\n        width: auto;\n        max-width: inherit; }\n\n      .ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder {\n        color: #777;\n        opacity: 1; }\n\n      .ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder {\n        color: #777; }\n\n      .ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder {\n        color: #777; }\n\n      .ng2-tag-input.bootstrap3-info input:focus {\n        border: none;\n        -webkit-box-shadow: none;\n                box-shadow: none; }\n\n      .bootstrap3-info.ng2-tag-input.ng2-tag-input--focused {\n        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n                box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n        border: 1px solid #ccc; }\n\n      .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n        -webkit-box-shadow: inset 0 1px 1px #d9534f;\n                box-shadow: inset 0 1px 1px #d9534f; }\n\n      .ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        -webkit-transition: all 0.25s;\n        transition: all 0.25s;\n        padding: 0.25rem 0;\n        min-height: 32px;\n        cursor: text;\n        border-bottom: 2px solid #efefef; }\n        .ng2-tag-input:focus {\n          outline: 0; }\n        .ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .ng2-tag-input.ng2-tag-input--focused {\n          border-bottom: 2px solid #2196F3; }\n        .ng2-tag-input.ng2-tag-input--invalid {\n          border-bottom: 2px solid #f44336; }\n        .ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .ng2-tag-input form {\n          margin: 0.1em 0; }\n        .ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .minimal.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        cursor: text;\n        border-bottom: 1px solid transparent; }\n        .minimal.ng2-tag-input:focus {\n          outline: 0; }\n        .minimal.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .minimal.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .minimal.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .minimal.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .dark.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        cursor: text;\n        border-bottom: 2px solid #444; }\n        .dark.ng2-tag-input:focus {\n          outline: 0; }\n        .dark.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .dark.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .dark.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .dark.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .bootstrap.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        cursor: text;\n        border-bottom: 2px solid #efefef; }\n        .bootstrap.ng2-tag-input:focus {\n          outline: 0; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--focused {\n          border-bottom: 2px solid #0275d8; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--invalid {\n          border-bottom: 2px solid #d9534f; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .bootstrap.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .bootstrap3-info.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        padding: 4px;\n        cursor: text;\n        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n                box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n        border-radius: 4px; }\n        .bootstrap3-info.ng2-tag-input:focus {\n          outline: 0; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n          border-bottom: 1px solid #d9534f; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .bootstrap3-info.ng2-tag-input form {\n          margin: 0.1em 0; }\n        .bootstrap3-info.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .error-message {\n        font-size: 0.8em;\n        color: #f44336;\n        margin: 0.5em 0 0 0; }\n\n      .bootstrap .error-message {\n        color: #d9534f; }\n\n      .progress-bar, .progress-bar:before {\n        height: 2px;\n        width: 100%;\n        margin: 0; }\n\n      .progress-bar {\n        background-color: #2196F3;\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        position: absolute;\n        bottom: 0; }\n\n      .progress-bar:before {\n        background-color: #82c4f8;\n        content: '';\n        -webkit-animation: running-progress 2s cubic-bezier(0.4, 0, 0.2, 1) infinite;\n        animation: running-progress 2s cubic-bezier(0.4, 0, 0.2, 1) infinite; }\n\n      @-webkit-keyframes running-progress {\n        0% {\n          margin-left: 0;\n          margin-right: 100%; }\n        50% {\n          margin-left: 25%;\n          margin-right: 0; }\n        100% {\n          margin-left: 100%;\n          margin-right: 0; } }\n\n      @keyframes running-progress {\n        0% {\n          margin-left: 0;\n          margin-right: 100%; }\n        50% {\n          margin-left: 25%;\n          margin-right: 0; }\n        100% {\n          margin-left: 100%;\n          margin-right: 0; } }\n\n      tag {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        font-family: \"Roboto\", \"Helvetica Neue\", sans-serif;\n        font-weight: 400;\n        font-size: 1em;\n        letter-spacing: 0.05rem;\n        color: #444;\n        border-radius: 16px;\n        -webkit-transition: all 0.3s;\n        transition: all 0.3s;\n        margin: 0.1rem 0.3rem 0.1rem 0;\n        padding: 0.08rem 0.45rem;\n        height: 32px;\n        line-height: 34px;\n        background: #efefef;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none;\n        overflow: hidden;\n        outline: 0;\n        cursor: pointer;\n        position: relative; }\n        tag:not(.readonly):not(.tag--editing):focus {\n          background: #2196F3;\n          color: #fff; }\n        tag:not(.readonly):not(.tag--editing):active {\n          background: #0d8aee;\n          color: #fff; }\n        tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n          background: #e2e2e2;\n          color: initial; }\n        tag.readonly {\n          cursor: default; }\n        tag.readonly:focus, tag:focus {\n          outline: 0; }\n        tag.tag--editing {\n          background-color: #fff;\n          border: 1px solid #ccc;\n          cursor: text; }\n\n      .minimal tag {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        border-radius: 0;\n        background: #f9f9f9;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none;\n        overflow: hidden;\n        outline: 0;\n        cursor: pointer;\n        position: relative; }\n        .minimal tag:not(.readonly):not(.tag--editing):focus {\n          background: #d0d0d0;\n          color: initial; }\n        .minimal tag:not(.readonly):not(.tag--editing):active {\n          background: #d0d0d0;\n          color: initial; }\n        .minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n          background: #ececec; }\n        .minimal tag.readonly {\n          cursor: default; }\n        .minimal tag.readonly:focus, .minimal tag:focus {\n          outline: 0; }\n        .minimal tag.tag--editing {\n          cursor: text; }\n\n      .dark tag {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        color: #f9f9f9;\n        border-radius: 3px;\n        background: #444;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none;\n        overflow: hidden;\n        outline: 0;\n        cursor: pointer;\n        position: relative; }\n        .dark tag:not(.readonly):not(.tag--editing):focus {\n          background: #efefef;\n          color: #444; }\n        .dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n          background: #2b2b2b;\n          color: #f9f9f9; }\n        .dark tag.readonly {\n          cursor: default; }\n        .dark tag.readonly:focus, .dark tag:focus {\n          outline: 0; }\n        .dark tag.tag--editing {\n          cursor: text; }\n\n      .bootstrap tag {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        color: #f9f9f9;\n        border-radius: 0.25rem;\n        background: #0275d8;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none;\n        overflow: hidden;\n        outline: 0;\n        cursor: pointer;\n        position: relative; }\n        .bootstrap tag:not(.readonly):not(.tag--editing):focus {\n          background: #025aa5; }\n        .bootstrap tag:not(.readonly):not(.tag--editing):active {\n          background: #025aa5; }\n        .bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n          background: #0267bf;\n          color: #f9f9f9; }\n        .bootstrap tag.readonly {\n          cursor: default; }\n        .bootstrap tag.readonly:focus, .bootstrap tag:focus {\n          outline: 0; }\n        .bootstrap tag.tag--editing {\n          cursor: text; }\n\n      .bootstrap3-info tag {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        font-family: inherit;\n        font-weight: 400;\n        font-size: 95%;\n        color: #fff;\n        border-radius: 0.25em;\n        background: #5bc0de;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none;\n        overflow: hidden;\n        outline: 0;\n        cursor: pointer;\n        position: relative;\n        padding: .25em .6em;\n        text-align: center;\n        white-space: nowrap; }\n        .bootstrap3-info tag:not(.readonly):not(.tag--editing):focus {\n          background: #28a1c5; }\n        .bootstrap3-info tag:not(.readonly):not(.tag--editing):active {\n          background: #28a1c5; }\n        .bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover {\n          background: #46b8da;\n          color: #fff; }\n        .bootstrap3-info tag.readonly {\n          cursor: default; }\n        .bootstrap3-info tag.readonly:focus, .bootstrap3-info tag:focus {\n          outline: 0; }\n        .bootstrap3-info tag.tag--editing {\n          cursor: text; }\n\n      :host {\n        display: block; }\n    `],\n    template: `\n      <!-- CONTAINER -->\n\n      <div ngClass=\"ng2-tag-input {{ theme || '' }}\"\n           (click)=\"focus(true, false)\"\n           [attr.tabindex]=\"-1\"\n\n           (drop)=\"dragZone ? onTagDropped($event, undefined) : undefined\"\n           (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\n           (dragover)=\"dragZone ? onDragOver($event) : undefined\"\n           (dragend)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\n\n           [class.ng2-tag-input--dropping]=\"isDropping()\"\n           [class.ng2-tag-input--disabled]=\"disable\"\n           [class.ng2-tag-input--loading]=\"isLoading\"\n           [class.ng2-tag-input--invalid]=\"hasErrors()\"\n           [class.ng2-tag-input--focused]=\"isInputFocused()\">\n\n          <!-- TAGS -->\n          <div class=\"ng2-tags-container\">\n              <tag *ngFor=\"let item of items; let i = index; trackBy: trackBy\"\n\n                   (onSelect)=\"selectItem(item)\"\n                   (onRemove)=\"onRemoveRequested(item, i)\"\n                   (onKeyDown)=\"handleKeydown($event)\"\n                   (onTagEdited)=\"onTagEdited.emit($event)\"\n                   (onBlur)=\"onTagBlurred($event, i)\"\n                   draggable=\"{{ editable }}\"\n\n                   (dragstart)=\"dragZone ? onDragStarted($event, item, i) : undefined\"\n                   (drop)=\"dragZone ? onTagDropped($event, i) : undefined\"\n                   (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\n                   (dragover)=\"dragZone ? onDragOver($event, i) : undefined\"\n                   (dragleave)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\n\n                   [attr.tabindex]=\"0\"\n                   [disabled]=\"disable\"\n                   [@animation]=\"animationMetadata\"\n                   [hasRipple]=\"ripple\"\n                   [index]=\"i\"\n                   [removable]=\"removable\"\n                   [editable]=\"editable\"\n                   [displayBy]=\"displayBy\"\n                   [identifyBy]=\"identifyBy\"\n                   [template]=\"!!hasCustomTemplate() ? templates.first : undefined\"\n                   [draggable]=\"dragZone\"\n                   [model]=\"item\">\n              </tag>\n\n              <tag-input-form\n                  (onSubmit)=\"onAddingRequested(false, formValue)\"\n                  (onBlur)=\"blur()\"\n                  (click)=\"dropdown ? dropdown.show() : undefined\"\n                  (onKeydown)=\"fireEvents('keydown', $event)\"\n                  (onKeyup)=\"fireEvents('keyup', $event)\"\n\n                  [(inputText)]=\"inputText\"\n                  [disabled]=\"disable\"\n                  [validators]=\"validators\"\n                  [asyncValidators]=\"asyncValidators\"\n                  [hidden]=\"maxItemsReached\"\n                  [placeholder]=\"items.length ? placeholder : secondaryPlaceholder\"\n                  [inputClass]=\"inputClass\"\n                  [inputId]=\"inputId\"\n                  [tabindex]=\"tabindex\">\n              </tag-input-form>\n          </div>\n\n          <div class=\"progress-bar\" *ngIf=\"isLoading\"></div>\n      </div>\n\n      <!-- ERRORS -->\n      <div *ngIf=\"hasErrors()\" class=\"error-messages {{ theme || '' }}\">\n          <p *ngFor=\"let error of inputForm.getErrorMessages(errorMessages)\" class=\"error-message\">\n              <span>{{ error }}</span>\n          </p>\n      </div>\n\n      <ng-content></ng-content>\n    `,\n    animations\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: DragProvider, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'separatorKeys': [{ type: Input },],\n'separatorKeyCodes': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'secondaryPlaceholder': [{ type: Input },],\n'maxItems': [{ type: Input },],\n'validators': [{ type: Input },],\n'asyncValidators': [{ type: Input },],\n'onlyFromAutocomplete': [{ type: Input },],\n'errorMessages': [{ type: Input },],\n'theme': [{ type: Input },],\n'onTextChangeDebounce': [{ type: Input },],\n'inputId': [{ type: Input },],\n'inputClass': [{ type: Input },],\n'clearOnBlur': [{ type: Input },],\n'hideForm': [{ type: Input },],\n'addOnBlur': [{ type: Input },],\n'addOnPaste': [{ type: Input },],\n'pasteSplitPattern': [{ type: Input },],\n'blinkIfDupe': [{ type: Input },],\n'removable': [{ type: Input },],\n'editable': [{ type: Input },],\n'allowDupes': [{ type: Input },],\n'modelAsStrings': [{ type: Input },],\n'trimTags': [{ type: Input },],\n'inputText': [{ type: Input },],\n'ripple': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'disable': [{ type: Input },],\n'dragZone': [{ type: Input },],\n'onRemoving': [{ type: Input },],\n'onAdding': [{ type: Input },],\n'animationDuration': [{ type: Input },],\n'onAdd': [{ type: Output },],\n'onRemove': [{ type: Output },],\n'onSelect': [{ type: Output },],\n'onFocus': [{ type: Output },],\n'onBlur': [{ type: Output },],\n'onTextChange': [{ type: Output },],\n'onPaste': [{ type: Output },],\n'onValidationError': [{ type: Output },],\n'onTagEdited': [{ type: Output },],\n'dropdown': [{ type: ContentChild, args: [TagInputDropdown, ] },],\n'templates': [{ type: ContentChildren, args: [TemplateRef, { descendants: false }, ] },],\n'inputForm': [{ type: ViewChild, args: [TagInputForm, ] },],\n'tags': [{ type: ViewChildren, args: [TagComponent, ] },],\n'inputTextChange': [{ type: Output },],\n'tabindexAttr': [{ type: HostBinding, args: ['attr.tabindex', ] },],\n};\n}\n\nfunction TagInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputComponent.ctorParameters;\n/** @type {?} */\nTagInputComponent.propDecorators;\n/**\n * \\@name separatorKeys\n * @desc keyboard keys with which a user can separate items\n * @type {?}\n */\nTagInputComponent.prototype.separatorKeys;\n/**\n * \\@name separatorKeyCodes\n * @desc keyboard key codes with which a user can separate items\n * @type {?}\n */\nTagInputComponent.prototype.separatorKeyCodes;\n/**\n * \\@name placeholder\n * @desc the placeholder of the input text\n * @type {?}\n */\nTagInputComponent.prototype.placeholder;\n/**\n * \\@name secondaryPlaceholder\n * @desc placeholder to appear when the input is empty\n * @type {?}\n */\nTagInputComponent.prototype.secondaryPlaceholder;\n/**\n * \\@name maxItems\n * @desc maximum number of items that can be added\n * @type {?}\n */\nTagInputComponent.prototype.maxItems;\n/**\n * \\@name validators\n * @desc array of Validators that are used to validate the tag before it gets appended to the list\n * @type {?}\n */\nTagInputComponent.prototype.validators;\n/**\n * \\@name asyncValidators\n * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n * @type {?}\n */\nTagInputComponent.prototype.asyncValidators;\n/**\n * - if set to true, it will only possible to add items from the autocomplete\n * \\@name onlyFromAutocomplete\n * @type {?}\n */\nTagInputComponent.prototype.onlyFromAutocomplete;\n/**\n * \\@name errorMessages\n * @type {?}\n */\nTagInputComponent.prototype.errorMessages;\n/**\n * \\@name theme\n * @type {?}\n */\nTagInputComponent.prototype.theme;\n/**\n * \\@name onTextChangeDebounce\n * @type {?}\n */\nTagInputComponent.prototype.onTextChangeDebounce;\n/**\n * - custom id assigned to the input\n * \\@name id\n * @type {?}\n */\nTagInputComponent.prototype.inputId;\n/**\n * - custom class assigned to the input\n * @type {?}\n */\nTagInputComponent.prototype.inputClass;\n/**\n * - option to clear text input when the form is blurred\n * \\@name clearOnBlur\n * @type {?}\n */\nTagInputComponent.prototype.clearOnBlur;\n/**\n * - hideForm\n * \\@name clearOnBlur\n * @type {?}\n */\nTagInputComponent.prototype.hideForm;\n/**\n * \\@name addOnBlur\n * @type {?}\n */\nTagInputComponent.prototype.addOnBlur;\n/**\n * \\@name addOnPaste\n * @type {?}\n */\nTagInputComponent.prototype.addOnPaste;\n/**\n * - pattern used with the native method split() to separate patterns in the string pasted\n * \\@name pasteSplitPattern\n * @type {?}\n */\nTagInputComponent.prototype.pasteSplitPattern;\n/**\n * \\@name blinkIfDupe\n * @type {?}\n */\nTagInputComponent.prototype.blinkIfDupe;\n/**\n * \\@name removable\n * @type {?}\n */\nTagInputComponent.prototype.removable;\n/**\n * \\@name editable\n * @type {?}\n */\nTagInputComponent.prototype.editable;\n/**\n * \\@name allowDupes\n * @type {?}\n */\nTagInputComponent.prototype.allowDupes;\n/**\n * \\@description if set to true, the newly added tags will be added as strings, and not objects\n * \\@name modelAsStrings\n * @type {?}\n */\nTagInputComponent.prototype.modelAsStrings;\n/**\n * \\@name trimTags\n * @type {?}\n */\nTagInputComponent.prototype.trimTags;\n/**\n * \\@name ripple\n * @type {?}\n */\nTagInputComponent.prototype.ripple;\n/**\n * \\@name tabindex\n * @desc pass through the specified tabindex to the input\n * @type {?}\n */\nTagInputComponent.prototype.tabindex;\n/**\n * \\@name disable\n * @type {?}\n */\nTagInputComponent.prototype.disable;\n/**\n * \\@name dragZone\n * @type {?}\n */\nTagInputComponent.prototype.dragZone;\n/**\n * \\@name onRemoving\n * @type {?}\n */\nTagInputComponent.prototype.onRemoving;\n/**\n * \\@name onAdding\n * @type {?}\n */\nTagInputComponent.prototype.onAdding;\n/**\n * \\@name animationDuration\n * @type {?}\n */\nTagInputComponent.prototype.animationDuration;\n/**\n * \\@name onAdd\n * @desc event emitted when adding a new item\n * @type {?}\n */\nTagInputComponent.prototype.onAdd;\n/**\n * \\@name onRemove\n * @desc event emitted when removing an existing item\n * @type {?}\n */\nTagInputComponent.prototype.onRemove;\n/**\n * \\@name onSelect\n * @desc event emitted when selecting an item\n * @type {?}\n */\nTagInputComponent.prototype.onSelect;\n/**\n * \\@name onFocus\n * @desc event emitted when the input is focused\n * @type {?}\n */\nTagInputComponent.prototype.onFocus;\n/**\n * \\@name onFocus\n * @desc event emitted when the input is blurred\n * @type {?}\n */\nTagInputComponent.prototype.onBlur;\n/**\n * \\@name onTextChange\n * @desc event emitted when the input value changes\n * @type {?}\n */\nTagInputComponent.prototype.onTextChange;\n/**\n * - output triggered when text is pasted in the form\n * \\@name onPaste\n * @type {?}\n */\nTagInputComponent.prototype.onPaste;\n/**\n * - output triggered when tag entered is not valid\n * \\@name onValidationError\n * @type {?}\n */\nTagInputComponent.prototype.onValidationError;\n/**\n * - output triggered when tag is edited\n * \\@name onTagEdited\n * @type {?}\n */\nTagInputComponent.prototype.onTagEdited;\n/**\n * \\@name dropdown\n * @type {?}\n */\nTagInputComponent.prototype.dropdown;\n/**\n * \\@name template\n * @desc reference to the template if provided by the user\n * @type {?}\n */\nTagInputComponent.prototype.templates;\n/**\n * \\@name inputForm\n * @type {?}\n */\nTagInputComponent.prototype.inputForm;\n/**\n * \\@name selectedTag\n * @desc reference to the current selected tag\n * @type {?}\n */\nTagInputComponent.prototype.selectedTag;\n/**\n * \\@name isLoading\n * @type {?}\n */\nTagInputComponent.prototype.isLoading;\n/**\n * \\@name tags\n * @desc list of Element items\n * @type {?}\n */\nTagInputComponent.prototype.tags;\n/**\n * \\@name listeners\n * @desc array of events that get fired using \\@fireEvents\n * @type {?}\n */\nTagInputComponent.prototype.listeners;\n/**\n * \\@description emitter for the 2-way data binding inputText value\n * \\@name inputTextChange\n * @type {?}\n */\nTagInputComponent.prototype.inputTextChange;\n/**\n * \\@description private variable to bind get/set\n * \\@name inputTextValue\n * @type {?}\n */\nTagInputComponent.prototype.inputTextValue;\n/**\n * \\@name animationMetadata\n * @type {?}\n */\nTagInputComponent.prototype.animationMetadata;\n/**\n * \\@name appendTag\n * \\@param tag {TagModel}\n * @type {?}\n */\nTagInputComponent.prototype.appendTag;\n/**\n * \\@name createTag\n * \\@param model\n * @type {?}\n */\nTagInputComponent.prototype.createTag;\n/**\n * \\@name onPasteCallback\n * \\@param data\n * @type {?}\n */\nTagInputComponent.prototype.onPasteCallback;\n/** @type {?} */\nTagInputComponent.prototype.renderer;\n/** @type {?} */\nTagInputComponent.prototype.dragProvider;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n/**\n * \\@name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate(\"{{ enter }}\", keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate(\"{{ leave }}\", keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst /** @type {?} */ KeyboardEvent = ( /** @type {?} */((global as any))).KeyboardEvent;\nconst /** @type {?} */ MouseEvent = ( /** @type {?} */((global as any))).MouseEvent;\n\n// mocking navigator\nconst /** @type {?} */ navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst /** @type {?} */ isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\nexport class TagComponent {\n/**\n * \\@name model {TagModel}\n */\npublic model: TagModel;\n/**\n * \\@name removable {boolean}\n */\npublic removable: boolean;\n/**\n * \\@name editable {boolean}\n */\npublic editable: boolean;\n/**\n * \\@name template {TemplateRef<any>}\n */\npublic template: TemplateRef<any>;\n/**\n * \\@name displayBy {string}\n */\npublic displayBy: string;\n/**\n * \\@name identifyBy {string}\n */\npublic identifyBy: string;\n/**\n * \\@name index {number}\n */\npublic index: number;\n/**\n * \\@name hasRipple\n */\npublic hasRipple: boolean;\n/**\n * \\@name disabled\n */\npublic disabled = false;\n/**\n * \\@name onSelect\n */\npublic onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n/**\n * \\@name onRemove\n */\npublic onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n/**\n * \\@name onBlur\n */\npublic onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n/**\n * \\@name onKeyDown\n */\npublic onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n/**\n * \\@name onTagEdited\n */\npublic onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n/**\n * \\@name readonly {boolean}\n * @return {?}\n */\npublic get readonly(): boolean {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    };\n/**\n * \\@name editing\n */\npublic editing = false;\n/**\n * \\@name moving\n */\npublic moving: boolean;\n/**\n * \\@name rippleState\n */\npublic rippleState = 'none';\n/**\n * \\@name ripple {TagRipple}\n */\npublic ripple: TagRipple;\n/**\n * @param {?} element\n * @param {?} renderer\n * @param {?} cdRef\n */\nconstructor(public element: ElementRef,\npublic renderer: Renderer2,\nprivate cdRef: ChangeDetectorRef) {}\n/**\n * \\@name select\n * @param {?=} $event\n * @return {?}\n */\npublic select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n/**\n * \\@name remove\n * @param {?} $event\n * @return {?}\n */\npublic remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n/**\n * \\@name focus\n * @return {?}\n */\npublic focus(): void {\n        this.element.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\npublic move(): void {\n        this.moving = true;\n    }\n/**\n * \\@name keydown\n * @param {?} event\n * @return {?}\n */\npublic keydown(event: KeyboardEvent): void {\n        if (this.editing) {\n            event.keyCode === 13 ? this.disableEditMode(event) : undefined;\n            return;\n        }\n\n        this.onKeyDown.emit({event, model: this.model});\n    }\n/**\n * \\@name blink\n * @return {?}\n */\npublic blink(): void {\n        const /** @type {?} */ classList = this.element.nativeElement.classList;\n        classList.add('blink');\n\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n/**\n * \\@name toggleEditMode\n * @return {?}\n */\npublic toggleEditMode(): void {\n        if (this.editable) {\n            this.editing ? undefined : this.activateEditMode();\n        }\n    }\n/**\n * \\@name onBlurred\n * @param {?} event\n * @return {?}\n */\npublic onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n\t\tif (!this.editable) {\n\t\t\treturn;\n        }\n\n        this.disableEditMode();\n\n        const /** @type {?} */ value: string = event.target.innerText;\n        const /** @type {?} */ result = typeof this.model === 'string' ? value :\n            {...this.model, [this.displayBy]: value};\n\n        this.onBlur.emit(result);\n    }\n/**\n * \\@name getDisplayValue\n * @param {?} item\n * @return {?}\n */\npublic getDisplayValue(item: TagModel): string {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n/**\n * @desc returns whether the ripple is visible or not\n * only works in Chrome\n * \\@name isRippleVisible\n * @return {?}\n */\npublic get isRippleVisible(): boolean {\n        return !this.readonly &&\n            !this.editing &&\n            isChrome &&\n            this.hasRipple;\n    }\n/**\n * \\@name disableEditMode\n * @param {?=} $event\n * @return {?}\n */\npublic disableEditMode($event?: KeyboardEvent): void {\n        const /** @type {?} */ classList = this.element.nativeElement.classList;\n        const /** @type {?} */ input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove('tag--editing');\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n/**\n * \\@name isDeleteIconVisible\n * @return {?}\n */\npublic isDeleteIconVisible(): boolean {\n        return !this.readonly &&\n            !this.disabled &&\n            this.removable &&\n            !this.editing;\n    }\n/**\n * \\@name getContentEditableText\n * @return {?}\n */\nprivate getContentEditableText(): string {\n        const /** @type {?} */ input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : '';\n    }\n/**\n * \\@name setContentEditableText\n * @param {?} model\n * @return {?}\n */\nprivate setContentEditableText(model: TagModel) {\n        const /** @type {?} */ input = this.getContentEditable();\n        const /** @type {?} */ value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n/**\n * \\@name\n * @return {?}\n */\nprivate activateEditMode(): void {\n        const /** @type {?} */ classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n/**\n * \\@name storeNewValue\n * @param {?} input\n * @return {?}\n */\nprivate storeNewValue(input: string): void {\n        const /** @type {?} */ exists = (model: TagModel) => {\n            return typeof model === 'string' ?\n                model === input :\n                model[this.displayBy] === input;\n        };\n\n        const /** @type {?} */ hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const /** @type {?} */ model = typeof this.model === 'string' ? input :\n            {\n                [this.identifyBy]: hasId() ? this.model[this.identifyBy] : input,\n                [this.displayBy]: input\n            };\n\n        // emit output\n        this.model = model;\n        this.onTagEdited.emit(model);\n    }\n/**\n * \\@name getContentEditable\n * @return {?}\n */\nprivate getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'tag',\n    template: `\n      <div (click)=\"select($event)\"\n           (dblclick)=\"toggleEditMode()\"\n           (mousedown)=\"rippleState='clicked'\"\n           (mouseup)=\"rippleState='none'\"\n           [ngSwitch]=\"!!template\"\n           [class.disabled]=\"disabled\"\n           [attr.tabindex]=\"-1\"\n           [attr.aria-label]=\"getDisplayValue(model)\">\n\n          <div *ngSwitchCase=\"true\" [attr.contenteditable]=\"editing\">\n              <!-- CUSTOM TEMPLATE -->\n              <ng-template\n                  [ngTemplateOutletContext]=\"{ item: model, index: index }\"\n                  [ngTemplateOutlet]=\"template\">\n              </ng-template>\n          </div>\n\n          <div *ngSwitchCase=\"false\" class=\"tag-wrapper\">\n              <!-- TAG NAME -->\n              <div [attr.contenteditable]=\"editing\"\n                   [attr.title]=\"getDisplayValue(model)\"\n                   class=\"tag__text inline\"\n                   spellcheck=\"false\"\n                   (keydown.enter)=\"disableEditMode($event)\"\n                   (keydown.escape)=\"disableEditMode($event)\"\n                   (click)=\"editing ? $event.stopPropagation() : undefined\"\n                   (blur)=\"onBlurred($event)\">\n                  {{ getDisplayValue(model) }}\n              </div>\n\n              <!-- 'X' BUTTON -->\n              <delete-icon\n                  aria-label=\"Remove tag\"\n                  role=\"button\"\n                  (click)=\"remove($event)\"\n                  *ngIf=\"isDeleteIconVisible()\">\n              </delete-icon>\n          </div>\n      </div>\n\n      <tag-ripple [state]=\"rippleState\"\n                  [attr.tabindex]=\"-1\"\n                  *ngIf=\"isRippleVisible\">\n      </tag-ripple>\n    `,\n    styles: [`\n      :host,\n      :host > div,\n      :host > div:focus {\n        outline: 0;\n        overflow: hidden;\n        -webkit-transition: opacity 1s;\n        transition: opacity 1s;\n        z-index: 1; }\n\n      :host {\n        max-width: 400px; }\n\n      :host.blink {\n        -webkit-animation: blink 0.3s normal forwards ease-in-out;\n        animation: blink 0.3s normal forwards ease-in-out; }\n\n      @-webkit-keyframes blink {\n        0% {\n          opacity: 0.3; } }\n\n      @keyframes blink {\n        0% {\n          opacity: 0.3; } }\n\n      :host .disabled {\n        cursor: not-allowed; }\n\n      :host [contenteditable='true'] {\n        outline: 0; }\n\n      .tag-wrapper {\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex; }\n\n      .tag__text {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'model': [{ type: Input },],\n'removable': [{ type: Input },],\n'editable': [{ type: Input },],\n'template': [{ type: Input },],\n'displayBy': [{ type: Input },],\n'identifyBy': [{ type: Input },],\n'index': [{ type: Input },],\n'hasRipple': [{ type: Input },],\n'disabled': [{ type: Input },],\n'onSelect': [{ type: Output },],\n'onRemove': [{ type: Output },],\n'onBlur': [{ type: Output },],\n'onKeyDown': [{ type: Output },],\n'onTagEdited': [{ type: Output },],\n'moving': [{ type: HostBinding, args: ['class.moving', ] },],\n'ripple': [{ type: ViewChild, args: [TagRipple, ] },],\n'keydown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\nfunction TagComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTagComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagComponent.ctorParameters;\n/** @type {?} */\nTagComponent.propDecorators;\n/**\n * \\@name model {TagModel}\n * @type {?}\n */\nTagComponent.prototype.model;\n/**\n * \\@name removable {boolean}\n * @type {?}\n */\nTagComponent.prototype.removable;\n/**\n * \\@name editable {boolean}\n * @type {?}\n */\nTagComponent.prototype.editable;\n/**\n * \\@name template {TemplateRef<any>}\n * @type {?}\n */\nTagComponent.prototype.template;\n/**\n * \\@name displayBy {string}\n * @type {?}\n */\nTagComponent.prototype.displayBy;\n/**\n * \\@name identifyBy {string}\n * @type {?}\n */\nTagComponent.prototype.identifyBy;\n/**\n * \\@name index {number}\n * @type {?}\n */\nTagComponent.prototype.index;\n/**\n * \\@name hasRipple\n * @type {?}\n */\nTagComponent.prototype.hasRipple;\n/**\n * \\@name disabled\n * @type {?}\n */\nTagComponent.prototype.disabled;\n/**\n * \\@name onSelect\n * @type {?}\n */\nTagComponent.prototype.onSelect;\n/**\n * \\@name onRemove\n * @type {?}\n */\nTagComponent.prototype.onRemove;\n/**\n * \\@name onBlur\n * @type {?}\n */\nTagComponent.prototype.onBlur;\n/**\n * \\@name onKeyDown\n * @type {?}\n */\nTagComponent.prototype.onKeyDown;\n/**\n * \\@name onTagEdited\n * @type {?}\n */\nTagComponent.prototype.onTagEdited;\n/**\n * \\@name editing\n * @type {?}\n */\nTagComponent.prototype.editing;\n/**\n * \\@name moving\n * @type {?}\n */\nTagComponent.prototype.moving;\n/**\n * \\@name rippleState\n * @type {?}\n */\nTagComponent.prototype.rippleState;\n/**\n * \\@name ripple {TagRipple}\n * @type {?}\n */\nTagComponent.prototype.ripple;\n/** @type {?} */\nTagComponent.prototype.element;\n/** @type {?} */\nTagComponent.prototype.renderer;\n/** @type {?} */\nTagComponent.prototype.cdRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    Input\n} from '@angular/core';\nexport class TagRipple {\npublic state: string = 'none';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n        \n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n};\n}\n\nfunction TagRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nTagRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagRipple.ctorParameters;\n/** @type {?} */\nTagRipple.propDecorators;\n/** @type {?} */\nTagRipple.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    Component,\n    ContentChildren,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Injector,\n    Input,\n    QueryList,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\n\n// rx\n\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/operator/filter';\nimport'rxjs/add/operator/first';\nimport'rxjs/add/operator/debounceTime';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { OptionsProvider } from '../../core/providers/options-provider';\nimport { TagInputComponent } from '../tag-input/tag-input';\nimport { TagInputDropdownOptions } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\n\nconst /** @type {?} */ defaults: Type<TagInputDropdownOptions> = forwardRef(() => OptionsProvider.defaults.dropdown);\nexport class TagInputDropdown {\n/**\n * \\@name dropdown\n */\npublic dropdown: Ng2Dropdown;\n/**\n * \\@name menuTemplate\n * @desc reference to the template if provided by the user\n */\npublic templates: QueryList<TemplateRef<any>>;\n/**\n * \\@name offset\n */\npublic offset: string = new defaults().offset;\n/**\n * \\@name focusFirstElement\n */\npublic focusFirstElement = new defaults().focusFirstElement;\n/**\n * - show autocomplete dropdown if the value of input is empty\n * \\@name showDropdownIfEmpty\n */\npublic showDropdownIfEmpty = new defaults().showDropdownIfEmpty;\n/**\n * \\@description observable passed as input which populates the autocomplete items\n * \\@name autocompleteObservable\n */\npublic autocompleteObservable: (text: string) => Observable<any>;\n/**\n * - desc minimum text length in order to display the autocomplete dropdown\n * \\@name minimumTextLength\n */\npublic minimumTextLength = new defaults().minimumTextLength;\n/**\n * - number of items to display in the autocomplete dropdown\n * \\@name limitItemsTo\n */\npublic limitItemsTo: number = new defaults().limitItemsTo;\n/**\n * \\@name displayBy\n */\npublic displayBy = new defaults().displayBy;\n/**\n * \\@name identifyBy\n */\npublic identifyBy = new defaults().identifyBy;\n/**\n * \\@description a function a developer can use to implement custom matching for the autocomplete\n * \\@name matchingFn\n */\npublic matchingFn: (value: string, target: TagModel) => boolean = new defaults().matchingFn;\n/**\n * \\@name appendToBody\n */\npublic appendToBody = new defaults().appendToBody;\n/**\n * \\@name keepOpen\n * \\@description option to leave dropdown open when adding a new item\n */\npublic keepOpen = new defaults().keepOpen;\n/**\n * list of items that match the current value of the input (for autocomplete)\n * \\@name items\n */\npublic items: TagModel[] = [];\n/**\n * \\@name tagInput\n */\npublic tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n/**\n * \\@name _autocompleteItems\n */\nprivate _autocompleteItems: TagModel[] = [];\n/**\n * \\@name autocompleteItems\n * @param {?} items\n * @return {?}\n */\npublic set autocompleteItems(items: TagModel[]) {\n        this._autocompleteItems = items;\n    }\n/**\n * \\@name autocompleteItems\n * @desc array of items that will populate the autocomplete\n * @return {?}\n */\npublic get autocompleteItems(): TagModel[] {\n        const /** @type {?} */ items = this._autocompleteItems;\n\n        if (!items) {\n            return [];\n        }\n\n        return items.map((item: TagModel) => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n    }\n/**\n * @param {?} injector\n */\nconstructor(private readonly injector: Injector) {}\n/**\n * \\@name ngOnInit\n * @return {?}\n */\npublic ngOnInit(): void {\n        this.onItemClicked().subscribe(this.requestAdding);\n\n        // reset itemsMatching array when the dropdown is hidden\n        this.onHide().subscribe(this.resetItems);\n\n        const /** @type {?} */ DEBOUNCE_TIME = 200;\n        const /** @type {?} */ KEEP_OPEN = this.keepOpen;\n\n        this.tagInput\n            .onTextChange\n            .asObservable()\n            .debounceTime(DEBOUNCE_TIME)\n            .filter((value: string) => {\n                if (KEEP_OPEN === false) {\n                    return value.length > 0;\n                }\n\n                return true;\n            })\n            .subscribe(this.show);\n    }\n/**\n * \\@name updatePosition\n * @return {?}\n */\npublic updatePosition(): void {\n        const /** @type {?} */ position = this.tagInput.inputForm.getElementPosition();\n\n        this.dropdown.menu.updatePosition(position);\n    }\n/**\n * \\@name isVisible\n * @return {?}\n */\npublic get isVisible(): boolean {\n        return this.dropdown.menu.state.menuState.isVisible;\n    }\n/**\n * \\@name onHide\n * @return {?}\n */\npublic onHide(): EventEmitter<Ng2Dropdown> {\n        return this.dropdown.onHide;\n    }\n/**\n * \\@name onItemClicked\n * @return {?}\n */\npublic onItemClicked(): EventEmitter<string> {\n        return this.dropdown.onItemClicked;\n    }\n/**\n * \\@name selectedItem\n * @return {?}\n */\npublic get selectedItem(): Ng2MenuItem {\n        return this.dropdown.menu.state.dropdownState.selectedItem;\n    }\n/**\n * \\@name state\n * @return {?}\n */\npublic get state(): any {\n        return this.dropdown.menu.state;\n    }\n/**\n *\n * \\@name show\n */\npublic show = (): void => {\n        const maxItemsReached = this.tagInput.items.length === this.tagInput.maxItems;\n        const value = this.getFormValue();\n        const hasMinimumText = value.trim().length >= this.minimumTextLength;\n        const position = this.calculatePosition();\n        const items = this.getMatchingItems(value);\n        const hasItems = items.length > 0;\n        const isHidden = this.isVisible === false;\n        const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n        const assertions = [];\n\n        const shouldShow = isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n        const shouldHide = this.isVisible && !hasItems;\n\n        if (this.autocompleteObservable && hasMinimumText) {\n            return this.getItemsFromObservable(value);\n        }\n\n        if (!this.showDropdownIfEmpty && !value) {\n            return this.dropdown.hide();\n        }\n\n        if (maxItemsReached) {\n            return this.dropdown.hide();\n        }\n\n        this.setItems(items);\n\n        if (shouldShow) {\n            this.dropdown.show(position);\n        } else if (shouldHide) {\n            this.hide();\n        }\n    }\n/**\n * \\@name hide\n * @return {?}\n */\npublic hide(): void {\n        this.resetItems();\n        this.dropdown.hide();\n    }\n/**\n * \\@name scrollListener\n * @return {?}\n */\npublic scrollListener(): void {\n        if (!this.isVisible) {\n            return;\n        }\n\n        this.updatePosition();\n    }\n/**\n * \\@name onWindowBlur\n * @return {?}\n */\npublic onWindowBlur(): void {\n        this.dropdown.hide();\n    }\n/**\n * \\@name getFormValue\n * @return {?}\n */\nprivate getFormValue(): string {\n        return this.tagInput.formValue.trim();\n    }\n/**\n * \\@name calculatePosition\n * @return {?}\n */\nprivate calculatePosition(): ClientRect {\n        return this.tagInput.inputForm.getElementPosition();\n    }\n/**\n * \\@name requestAdding\n * @param item {Ng2MenuItem}\n */\nprivate requestAdding = (item: Ng2MenuItem): void => {\n        this.tagInput.onAddingRequested(true, this.createTagModel(item));\n    }\n/**\n * \\@name createTagModel\n * @param {?} item\n * @return {?}\n */\nprivate createTagModel(item: Ng2MenuItem): TagModel {\n        const /** @type {?} */ display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n        const /** @type {?} */ value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n        return {\n            ...item.value,\n            [this.tagInput.displayBy]: display,\n            [this.tagInput.identifyBy]: value\n        };\n    }\n/**\n *\n * @param {?} value {string}\n * @return {?}\n */\nprivate getMatchingItems(value: string): TagModel[] {\n        if (!value && !this.showDropdownIfEmpty) {\n            return [];\n        }\n\n        const /** @type {?} */ dupesAllowed = this.tagInput.allowDupes;\n\n        return this.autocompleteItems.filter((item: TagModel) => {\n            const /** @type {?} */ hasValue: boolean = dupesAllowed ? false : this.tagInput.tags.some(tag => {\n                const /** @type {?} */ identifyBy = this.tagInput.identifyBy;\n                const /** @type {?} */ model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n                return model === item[this.identifyBy];\n            });\n\n            return this.matchingFn(value, item) && (hasValue === false);\n        });\n    }\n/**\n * \\@name setItems\n * @param {?} items\n * @return {?}\n */\nprivate setItems(items: TagModel[]): void {\n        this.items = items.slice(0, this.limitItemsTo || items.length);\n    }\n/**\n * \\@name resetItems\n */\nprivate resetItems = (): void => {\n        this.items = [];\n    }\n/**\n * \\@name populateItems\n * @param {?} data\n * @return {?}\n */\nprivate populateItems(data: any): TagInputDropdown {\n        this.autocompleteItems = data.map(item => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n\n        return this;\n    }\n/**\n * \\@name getItemsFromObservable\n * @param text\n */\nprivate getItemsFromObservable = (text: string): void => {\n        this.setLoadingState(true);\n\n        const subscribeFn = (data: any[]) => {\n            // hide loading animation\n            this.setLoadingState(false)\n                // add items\n                .populateItems(data);\n\n            this.setItems(this.getMatchingItems(text));\n\n            if (this.items.length) {\n                this.dropdown.show(this.calculatePosition());\n            } else if (!this.showDropdownIfEmpty && this.isVisible) {\n                this.dropdown.hide();\n            }\n        };\n\n        this.autocompleteObservable(text)\n            .first()\n            .subscribe(subscribeFn, () => this.setLoadingState(false));\n    }\n/**\n * \\@name setLoadingState\n * @param {?} state\n * @return {?}\n */\nprivate setLoadingState(state: boolean): TagInputDropdown {\n        this.tagInput.isLoading = state;\n\n        return this;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'tag-input-dropdown',\n    template: `\n      <ng2-dropdown>\n          <ng2-dropdown-menu [focusFirstElement]=\"focusFirstElement\"\n                             [appendToBody]=\"appendToBody\"\n                             [offset]=\"offset\">\n              <ng2-menu-item *ngFor=\"let item of items; let index = index; let last = last\"\n                             [value]=\"item\"\n                             [ngSwitch]=\"!!templates.length\">\n\n                  <span *ngSwitchCase=\"false\"\n                        [innerHTML]=\"item[displayBy] | highlight : tagInput.inputForm.value.value\">\n                  </span>\n\n                  <ng-template *ngSwitchDefault\n                            [ngTemplateOutlet]=\"templates.first\"\n                            [ngTemplateOutletContext]=\"{ item: item, index: index, last: last }\">\n                  </ng-template>\n              </ng2-menu-item>\n          </ng2-dropdown-menu>\n      </ng2-dropdown>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dropdown': [{ type: ViewChild, args: [Ng2Dropdown, ] },],\n'templates': [{ type: ContentChildren, args: [TemplateRef, ] },],\n'offset': [{ type: Input },],\n'focusFirstElement': [{ type: Input },],\n'showDropdownIfEmpty': [{ type: Input },],\n'autocompleteObservable': [{ type: Input },],\n'minimumTextLength': [{ type: Input },],\n'limitItemsTo': [{ type: Input },],\n'displayBy': [{ type: Input },],\n'identifyBy': [{ type: Input },],\n'matchingFn': [{ type: Input },],\n'appendToBody': [{ type: Input },],\n'keepOpen': [{ type: Input },],\n'autocompleteItems': [{ type: Input },],\n'scrollListener': [{ type: HostListener, args: ['window:scroll', ] },],\n'onWindowBlur': [{ type: HostListener, args: ['window:blur', ] },],\n};\n}\n\nfunction TagInputDropdown_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputDropdown.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputDropdown.ctorParameters;\n/** @type {?} */\nTagInputDropdown.propDecorators;\n/**\n * \\@name dropdown\n * @type {?}\n */\nTagInputDropdown.prototype.dropdown;\n/**\n * \\@name menuTemplate\n * @desc reference to the template if provided by the user\n * @type {?}\n */\nTagInputDropdown.prototype.templates;\n/**\n * \\@name offset\n * @type {?}\n */\nTagInputDropdown.prototype.offset;\n/**\n * \\@name focusFirstElement\n * @type {?}\n */\nTagInputDropdown.prototype.focusFirstElement;\n/**\n * - show autocomplete dropdown if the value of input is empty\n * \\@name showDropdownIfEmpty\n * @type {?}\n */\nTagInputDropdown.prototype.showDropdownIfEmpty;\n/**\n * \\@description observable passed as input which populates the autocomplete items\n * \\@name autocompleteObservable\n * @type {?}\n */\nTagInputDropdown.prototype.autocompleteObservable;\n/**\n * - desc minimum text length in order to display the autocomplete dropdown\n * \\@name minimumTextLength\n * @type {?}\n */\nTagInputDropdown.prototype.minimumTextLength;\n/**\n * - number of items to display in the autocomplete dropdown\n * \\@name limitItemsTo\n * @type {?}\n */\nTagInputDropdown.prototype.limitItemsTo;\n/**\n * \\@name displayBy\n * @type {?}\n */\nTagInputDropdown.prototype.displayBy;\n/**\n * \\@name identifyBy\n * @type {?}\n */\nTagInputDropdown.prototype.identifyBy;\n/**\n * \\@description a function a developer can use to implement custom matching for the autocomplete\n * \\@name matchingFn\n * @type {?}\n */\nTagInputDropdown.prototype.matchingFn;\n/**\n * \\@name appendToBody\n * @type {?}\n */\nTagInputDropdown.prototype.appendToBody;\n/**\n * \\@name keepOpen\n * \\@description option to leave dropdown open when adding a new item\n * @type {?}\n */\nTagInputDropdown.prototype.keepOpen;\n/**\n * list of items that match the current value of the input (for autocomplete)\n * \\@name items\n * @type {?}\n */\nTagInputDropdown.prototype.items;\n/**\n * \\@name tagInput\n * @type {?}\n */\nTagInputDropdown.prototype.tagInput;\n/**\n * \\@name _autocompleteItems\n * @type {?}\n */\nTagInputDropdown.prototype._autocompleteItems;\n/**\n *\n * \\@name show\n * @type {?}\n */\nTagInputDropdown.prototype.show;\n/**\n * \\@name requestAdding\n * \\@param item {Ng2MenuItem}\n * @type {?}\n */\nTagInputDropdown.prototype.requestAdding;\n/**\n * \\@name resetItems\n * @type {?}\n */\nTagInputDropdown.prototype.resetItems;\n/**\n * \\@name getItemsFromObservable\n * \\@param text\n * @type {?}\n */\nTagInputDropdown.prototype.getItemsFromObservable;\n/** @type {?} */\nTagInputDropdown.prototype.injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\nexport class TagInputForm {\n/**\n * \\@name onSubmit\n */\npublic onSubmit: EventEmitter<any> = new EventEmitter();\n/**\n * \\@name onBlur\n */\npublic onBlur: EventEmitter<any> = new EventEmitter();\n/**\n * \\@name onFocus\n */\npublic onFocus: EventEmitter<any> = new EventEmitter();\n/**\n * \\@name onKeyup\n */\npublic onKeyup: EventEmitter<any> = new EventEmitter();\n/**\n * \\@name onKeydown\n */\npublic onKeydown: EventEmitter<any> = new EventEmitter();\n/**\n * \\@name placeholder\n */\npublic placeholder: string;\n/**\n * \\@name validators\n */\npublic validators: ValidatorFn[] = [];\n/**\n * \\@name asyncValidators\n * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n */\npublic asyncValidators: AsyncValidatorFn[] = [];\n/**\n * \\@name inputId\n */\npublic inputId: string;\n/**\n * \\@name inputClass\n */\npublic inputClass: string;\n/**\n * \\@name inputText\n * @return {?}\n */\npublic get inputText(): string {\n        return this.inputTextValue;\n    }\n/**\n * \\@name tabindex\n * @desc pass through the specified tabindex to the input\n */\npublic tabindex: string = '';\n/**\n * \\@name disabled\n */\npublic disabled: boolean = false;\n/**\n * \\@name inputText\n * @param {?} text {string}\n * @return {?}\n */\npublic set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n/**\n * \\@name input\n */\npublic input;\n/**\n * \\@name form\n */\npublic form: FormGroup;\n/**\n * \\@name inputTextChange\n */\npublic inputTextChange: EventEmitter<string> = new EventEmitter();\n/**\n * \\@name inputTextValue\n */\npublic inputTextValue: string = '';\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        // creating form\n        this.form = new FormGroup({\n            item: new FormControl({value: '', disabled: this.disabled}, this.validators, this.asyncValidators)\n        });\n    }\n/**\n * \\@name value\n * @return {?}\n */\npublic get value(): AbstractControl | null {\n        return this.form.get('item');\n    }\n/**\n * \\@name isInputFocused\n * @return {?}\n */\npublic isInputFocused(): boolean {\n        return document.activeElement === this.input.nativeElement;\n    }\n/**\n * \\@name getErrorMessages\n * @param {?} messages\n * @return {?}\n */\npublic getErrorMessages(messages): string[] {\n        const /** @type {?} */ value = this.value;\n\n        return value ? Object.keys(messages)\n            .filter(err => value.hasError(err))\n            .map(err => messages[err]) : [];\n    }\n/**\n * \\@name hasErrors\n * @return {?}\n */\npublic hasErrors(): boolean {\n        return this.form.dirty &&\n            this.form.value.item &&\n            this.form.invalid;\n    }\n/**\n * \\@name focus\n * @return {?}\n */\npublic focus(): void {\n        this.input.nativeElement.focus();\n    }\n/**\n * \\@name blur\n * @return {?}\n */\npublic blur(): void {\n        this.input.nativeElement.blur();\n    }\n/**\n * \\@name getElementPosition\n * @return {?}\n */\npublic getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n/**\n * - removes input from the component\n * \\@name destroy\n * @return {?}\n */\npublic destroy(): void {\n        const /** @type {?} */ input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n/**\n * \\@name onKeyDown\n * @param {?} $event\n * @return {?}\n */\npublic onKeyDown($event) {\n        return this.onKeydown.emit($event);\n    }\n/**\n * \\@name submit\n * @param {?} $event\n * @return {?}\n */\npublic submit($event: any): void {\n        this.onSubmit.emit($event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'tag-input-form',\n    styles: [`\n      .dark tag:focus {\n        -webkit-box-shadow: 0 0 0 1px #323232;\n                box-shadow: 0 0 0 1px #323232; }\n\n      .ng2-tag-input.bootstrap3-info {\n        background-color: #fff;\n        display: inline-block;\n        color: #555;\n        vertical-align: middle;\n        max-width: 100%;\n        height: 42px;\n        line-height: 44px; }\n\n      .ng2-tag-input.bootstrap3-info input {\n        border: none;\n        -webkit-box-shadow: none;\n                box-shadow: none;\n        outline: none;\n        background-color: transparent;\n        padding: 0 6px;\n        margin: 0;\n        width: auto;\n        max-width: inherit; }\n\n      .ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder {\n        color: #777;\n        opacity: 1; }\n\n      .ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder {\n        color: #777; }\n\n      .ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder {\n        color: #777; }\n\n      .ng2-tag-input.bootstrap3-info input:focus {\n        border: none;\n        -webkit-box-shadow: none;\n                box-shadow: none; }\n\n      .bootstrap3-info.ng2-tag-input.ng2-tag-input--focused {\n        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n                box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.4);\n        border: 1px solid #ccc; }\n\n      .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n        -webkit-box-shadow: inset 0 1px 1px #d9534f;\n                box-shadow: inset 0 1px 1px #d9534f; }\n\n      .ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        -webkit-transition: all 0.25s;\n        transition: all 0.25s;\n        padding: 0.25rem 0;\n        min-height: 32px;\n        cursor: text;\n        border-bottom: 2px solid #efefef; }\n        .ng2-tag-input:focus {\n          outline: 0; }\n        .ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .ng2-tag-input.ng2-tag-input--focused {\n          border-bottom: 2px solid #2196F3; }\n        .ng2-tag-input.ng2-tag-input--invalid {\n          border-bottom: 2px solid #f44336; }\n        .ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .ng2-tag-input form {\n          margin: 0.1em 0; }\n        .ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .minimal.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        cursor: text;\n        border-bottom: 1px solid transparent; }\n        .minimal.ng2-tag-input:focus {\n          outline: 0; }\n        .minimal.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .minimal.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .minimal.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .minimal.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .dark.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        cursor: text;\n        border-bottom: 2px solid #444; }\n        .dark.ng2-tag-input:focus {\n          outline: 0; }\n        .dark.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .dark.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .dark.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .dark.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .bootstrap.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        cursor: text;\n        border-bottom: 2px solid #efefef; }\n        .bootstrap.ng2-tag-input:focus {\n          outline: 0; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--focused {\n          border-bottom: 2px solid #0275d8; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--invalid {\n          border-bottom: 2px solid #d9534f; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .bootstrap.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .bootstrap.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .bootstrap3-info.ng2-tag-input {\n        display: block;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n                flex-direction: row;\n        -ms-flex-wrap: wrap;\n            flex-wrap: wrap;\n        position: relative;\n        padding: 4px;\n        cursor: text;\n        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n                box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n        border-radius: 4px; }\n        .bootstrap3-info.ng2-tag-input:focus {\n          outline: 0; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping {\n          opacity: 0.7; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid {\n          border-bottom: 1px solid #d9534f; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--loading {\n          border: none; }\n        .bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled {\n          opacity: 0.5;\n          cursor: not-allowed; }\n        .bootstrap3-info.ng2-tag-input form {\n          margin: 0.1em 0; }\n        .bootstrap3-info.ng2-tag-input .ng2-tags-container {\n          -ms-flex-wrap: wrap;\n              flex-wrap: wrap;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex; }\n\n      .error-message {\n        font-size: 0.8em;\n        color: #f44336;\n        margin: 0.5em 0 0 0; }\n\n      .bootstrap .error-message {\n        color: #d9534f; }\n\n      .ng2-tag-input__text-input {\n        display: inline;\n        vertical-align: middle;\n        border: none;\n        padding: 0 0.5rem;\n        height: 38px;\n        font-size: 1em;\n        font-family: \"Roboto\", \"Helvetica Neue\", sans-serif; }\n        .ng2-tag-input__text-input:focus {\n          outline: 0; }\n        .ng2-tag-input__text-input[disabled=true] {\n          opacity: 0.5;\n          background: #fff; }\n    `],\n    template: `\n      <!-- form -->\n      <form (submit)=\"submit($event)\" [formGroup]=\"form\">\n          <input #input\n\n                 type=\"text\"\n                 class=\"ng2-tag-input__text-input\"\n                 autocomplete=\"off\"\n                 tabindex=\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\"\n                 minlength=\"1\"\n\n                 [(ngModel)]=\"inputText\"\n                 [formControlName]=\"'item'\"\n                 [ngClass]=\"inputClass\"\n                 [attr.id]=\"inputId\"\n                 [attr.placeholder]=\"placeholder\"\n                 [attr.aria-label]=\"placeholder\"\n                 [attr.tabindex]=\"tabindex\"\n                 [attr.disabled]=\"disabled ? disabled : null\"\n\n                 (focus)=\"onFocus.emit($event)\"\n                 (blur)=\"onBlur.emit($event)\"\n                 (keydown)=\"onKeyDown($event)\"\n                 (keyup)=\"onKeyup.emit($event)\"\n          />\n      </form>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onSubmit': [{ type: Output },],\n'onBlur': [{ type: Output },],\n'onFocus': [{ type: Output },],\n'onKeyup': [{ type: Output },],\n'onKeydown': [{ type: Output },],\n'placeholder': [{ type: Input },],\n'validators': [{ type: Input },],\n'asyncValidators': [{ type: Input },],\n'inputId': [{ type: Input },],\n'inputClass': [{ type: Input },],\n'inputText': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'disabled': [{ type: Input },],\n'input': [{ type: ViewChild, args: ['input', ] },],\n'inputTextChange': [{ type: Output },],\n};\n}\n\nfunction TagInputForm_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputForm.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTagInputForm.ctorParameters;\n/** @type {?} */\nTagInputForm.propDecorators;\n/**\n * \\@name onSubmit\n * @type {?}\n */\nTagInputForm.prototype.onSubmit;\n/**\n * \\@name onBlur\n * @type {?}\n */\nTagInputForm.prototype.onBlur;\n/**\n * \\@name onFocus\n * @type {?}\n */\nTagInputForm.prototype.onFocus;\n/**\n * \\@name onKeyup\n * @type {?}\n */\nTagInputForm.prototype.onKeyup;\n/**\n * \\@name onKeydown\n * @type {?}\n */\nTagInputForm.prototype.onKeydown;\n/**\n * \\@name placeholder\n * @type {?}\n */\nTagInputForm.prototype.placeholder;\n/**\n * \\@name validators\n * @type {?}\n */\nTagInputForm.prototype.validators;\n/**\n * \\@name asyncValidators\n * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n * @type {?}\n */\nTagInputForm.prototype.asyncValidators;\n/**\n * \\@name inputId\n * @type {?}\n */\nTagInputForm.prototype.inputId;\n/**\n * \\@name inputClass\n * @type {?}\n */\nTagInputForm.prototype.inputClass;\n/**\n * \\@name tabindex\n * @desc pass through the specified tabindex to the input\n * @type {?}\n */\nTagInputForm.prototype.tabindex;\n/**\n * \\@name disabled\n * @type {?}\n */\nTagInputForm.prototype.disabled;\n/**\n * \\@name input\n * @type {?}\n */\nTagInputForm.prototype.input;\n/**\n * \\@name form\n * @type {?}\n */\nTagInputForm.prototype.form;\n/**\n * \\@name inputTextChange\n * @type {?}\n */\nTagInputForm.prototype.inputTextChange;\n/**\n * \\@name inputTextValue\n * @type {?}\n */\nTagInputForm.prototype.inputTextValue;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * \\@name listen\n * @param {?} listenerType\n * @param {?} action\n * @param {?=} condition\n * @return {?}\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\n\nexport type TagModel = string | {[key: string]: any};\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\nexport class TagInputAccessor implements ControlValueAccessor {\nprivate _items: TagModel[] = [];\nprivate _onTouchedCallback: () => void;\nprivate _onChangeCallback: (items: TagModel[]) => void;\n/**\n * \\@name displayBy\n */\npublic displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n/**\n * \\@name identifyBy\n */\npublic identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n/**\n * @return {?}\n */\npublic get items(): TagModel[] {\n        return this._items;\n    };\n/**\n * @param {?} items\n * @return {?}\n */\npublic set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n/**\n * @return {?}\n */\npublic onTouched() {\n        this._onTouchedCallback();\n    }\n/**\n * @param {?} items\n * @return {?}\n */\npublic writeValue(items: any[]) {\n        this._items = items || [];\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n/**\n * \\@name getItemValue\n * @param {?} item\n * @return {?}\n */\npublic getItemValue(item: TagModel): string {\n        return isObject(item) ? item[this.identifyBy] : item;\n    }\n/**\n * \\@name getItemDisplay\n * @param {?} item\n * @return {?}\n */\npublic getItemDisplay(item: TagModel): string {\n        return isObject(item) ? item[this.displayBy] : item;\n    }\n/**\n * \\@name getItemsWithout\n * @param {?} index\n * @return {?}\n */\nprotected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'displayBy': [{ type: Input },],\n'identifyBy': [{ type: Input },],\n};\n}\n\nfunction TagInputAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nTagInputAccessor.propDecorators;\n/** @type {?} */\nTagInputAccessor.prototype._items;\n/** @type {?} */\nTagInputAccessor.prototype._onTouchedCallback;\n/** @type {?} */\nTagInputAccessor.prototype._onChangeCallback;\n/**\n * \\@name displayBy\n * @type {?}\n */\nTagInputAccessor.prototype.displayBy;\n/**\n * \\@name identifyBy\n * @type {?}\n */\nTagInputAccessor.prototype.identifyBy;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n}\nexport class OptionsProvider {\npublic static defaults = defaults;\n/**\n * @param {?} options\n * @return {?}\n */\npublic setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nfunction OptionsProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nOptionsProvider.defaults;\n}\n\n\nexport { TagInputDropdownOptions, TagInputOptions };","import { Observable } from 'rxjs/Observable';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: string;\n    onTextChangeDebounce: number;\n    inputId: string;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const /** @type {?} */ defaults = {\n    tagInput: /** @type {?} */(( <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: '',\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: \"250ms\",\n            leave: \"150ms\"\n        }\n    })),\n    dropdown: /** @type {?} */(( <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        matchingFn\n    }))\n};\n/**\n * \\@name matchingFn\n * @this {?}\n * @param {?} value\n * @param {?} target\n * @return {?}\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const /** @type {?} */ targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean,\n    dropping: boolean,\n    index: number | undefined\n}\n\nexport declare type StateProperty = keyof State;\nexport class DragProvider {\npublic sender: TagInputComponent;\npublic receiver: TagInputComponent;\npublic state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n/**\n * \\@name setDraggedItem\n * @param {?} event\n * @param {?} tag\n * @return {?}\n */\npublic setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n    }\n/**\n * \\@name getDraggedItem\n * @param {?} event\n * @return {?}\n */\npublic getDraggedItem(event: DragEvent): DraggedTag {\n        const /** @type {?} */ data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n\n        return /** @type {?} */(( JSON.parse(data) as DraggedTag));\n    }\n/**\n * \\@name setSender\n * @param {?} sender\n * @return {?}\n */\npublic setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n/**\n * \\@name setReceiver\n * @param {?} receiver\n * @return {?}\n */\npublic setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n/**\n * \\@name onTagDropped\n * @param {?} tag\n * @param {?} indexDragged\n * @param {?} indexDropped\n * @return {?}\n */\npublic onTagDropped(tag: TagModel, indexDragged: number, indexDropped: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n/**\n * \\@name setState\n * @param {?} state\n * @return {?}\n */\npublic setState(state: {[K in StateProperty]?: State[K]}): void {\n        this.state = {...this.state, ...state};\n    }\n/**\n * \\@name getState\n * @param {?=} key\n * @return {?}\n */\npublic getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n/**\n * \\@name onDragEnd\n * @return {?}\n */\npublic onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DragProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nDragProvider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragProvider.ctorParameters;\n/** @type {?} */\nDragProvider.prototype.sender;\n/** @type {?} */\nDragProvider.prototype.receiver;\n/** @type {?} */\nDragProvider.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n** constants and default values for <tag-input>\n */\n\nexport const /** @type {?} */ PLACEHOLDER = '+ Tag';\nexport const /** @type {?} */ SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const /** @type {?} */ KEYDOWN = 'keydown';\nexport const /** @type {?} */ KEYUP = 'keyup';\nexport const /** @type {?} */ FOCUS = 'focus';\nexport const /** @type {?} */ MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const /** @type {?} */ ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const /** @type {?} */ KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const /** @type {?} */ DRAG_AND_DROP_KEY = 'Text';\nexport const /** @type {?} */ NEXT = 'NEXT';\nexport const /** @type {?} */ PREV = 'PREV';\n\n","import {Pipe, PipeTransform} from '@angular/core';\n\nconst /** @type {?} */ escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\nexport class HighlightPipe implements PipeTransform {\n/**\n * \\@name transform\n * @param {?} value {string}\n * @param {?} arg {string}\n * @return {?}\n */\npublic transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const /** @type {?} */ regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch ( /** @type {?} */e) {\n            return value;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n    name: 'highlight'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HighlightPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nHighlightPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHighlightPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["animations","constants.KEYDOWN","Observable","constants.NEXT","constants.PREV","constants.ACTIONS_KEYS","constants.KEY_PRESS_ACTIONS","constants.MAX_ITEMS_WARNING","constants.KEYUP","defaults","style","animate","keyframes","transition","state","trigger"],"mappings":"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"}
